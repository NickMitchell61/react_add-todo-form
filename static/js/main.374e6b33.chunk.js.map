{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","preparedTodosFromServer","userId","usersFromServer","find","App","useState","setTodos","setTitle","setUsername","isTitleValid","setIsTitleValid","isUserValid","setIsUserValid","handleChange","event","target","value","replace","Boolean","Error","action","method","onSubmit","preventDefault","maxId","Math","max","newUser","newTodo","prevTodos","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.374e6b33.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getName(name: string): User | null {\n  const foundName = usersFromServer.find(user => user.name === name);\n\n  return foundName || null;\n}\n\nexport const preparedTodosFromServer: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodosFromServer);\n  const [title, setTitle] = useState('');\n  const [username, setUsername] = useState('');\n  const [isTitleValid, setIsTitleValid] = useState(true);\n  const [isUserValid, setIsUserValid] = useState(true);\n\n  const handleOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const maxId = Math.max(...todos.map((todo) => todo.id));\n    const newUser = getName(username);\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title,\n      completed: false,\n      userId: newUser ? newUser.id : null,\n      user: newUser,\n    };\n\n    setIsTitleValid(Boolean(title));\n    setIsUserValid(Boolean(username));\n\n    if (!title || !username) {\n      return;\n    }\n\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n\n    setTitle('');\n    setUsername('');\n  };\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement\n  | HTMLSelectElement>\n    = (event) => {\n      const { id, value } = event.target;\n\n      switch (id) {\n        case 'title':\n          setTitle(value.replace(/[^a-zA-Zа-яА-ЯїЇіІєЄёЁ0-9\\s]+/g, ''));\n          setIsTitleValid(Boolean(value));\n          break;\n\n        case 'user':\n          setUsername(value);\n          setIsUserValid(Boolean(value));\n          break;\n\n        default:\n          throw new Error(`Can not find id of ${id}`);\n      }\n    };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChange}\n          />\n\n          {!isTitleValid\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={username}\n            onChange={handleChange}\n          >\n            <option\n              value=\"\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option value={user.name} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!isUserValid\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}