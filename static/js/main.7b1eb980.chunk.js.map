{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","info","completed","title","TodoList","todos","map","todo","userId","usersFromServer","find","App","useState","newTodos","setTodos","setTitle","userName","setUserName","titleErrorMessage","setTitleError","userErrorMessage","setUserError","handleChange","event","target","value","replace","Boolean","Error","action","method","onSubmit","preventDefault","maxId","Math","max","newUser","newTodo","trim","prevTodos","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b1eb980.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo = ({ user }: Props) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  info: Todo,\n}\n\nexport const TodoInfo = ({ info }: Props) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = info;\n\n  return (\n    <article data-id={id} className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo info={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getName(name: string): User | null {\n  const foundName = usersFromServer.find(user => user.name === name);\n\n  return foundName || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [newTodos, setTodos] = useState<Todo[]>(todos);\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [titleErrorMessage, setTitleError] = useState(true);\n  const [userErrorMessage, setUserError] = useState(true);\n\n  const handleOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const maxId = Math.max(...newTodos.map((todo) => todo.id));\n    const newUser = getName(userName);\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title,\n      completed: false,\n      userId: newUser ? newUser.id : null,\n      user: newUser,\n    };\n\n    setTitleError(Boolean(title.trim()));\n    setUserError(Boolean(userName));\n\n    if (!title || !userName) {\n      return;\n    }\n\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n\n    setTitle('');\n    setUserName('');\n  };\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement\n  | HTMLSelectElement>\n    = (event) => {\n      const { id, value } = event.target;\n\n      switch (id) {\n        case 'title':\n          setTitle(value.replace(/[^a-zA-Zа-яА-ЯїЇіІєЄёЁ0-9\\s]+/g, ''));\n          setTitleError(Boolean(value));\n          break;\n\n        case 'user':\n          setUserName(value);\n          setUserError(Boolean(value));\n          break;\n\n        default:\n          throw new Error(`Can not find id of ${id}`);\n      }\n    };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChange}\n          />\n\n          {!titleErrorMessage\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userName}\n            onChange={handleChange}\n          >\n            <option\n              value=\"\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option value={user.name} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!userErrorMessage\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}